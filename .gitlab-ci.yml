# Copyright (C) 2016-2019 Nicolas Lamirault <nicolas.lamirault@gmail.com>

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

image: docker:stable

services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay2
  APP_VERSION: "5.4"

stages:
  - build
  - deploy

before_script:
  - docker info

.docker_gitlab: &docker_gitlab
  before_script:
    - docker login -u gitlab-ci-token -p "$CI_BUILD_TOKEN" "$CI_REGISTRY"

.docker_hub: &docker_hub
  before_script:
    - docker login -u $DOCKER_USER -p $DOCKER_PASS

# ------------------------------ BUILD LATEST ------------------------------------

build:gitlab-arm-latest:
  <<: *docker_gitlab
  stage: build
  script:
    - export VERSION=$(grep ' VERSION' ${APP_VERSION}/Dockerfile.arm|awk -F" " '{ print $3 }')
    - echo ${VERSION}
    - docker build -t "$CI_REGISTRY_IMAGE:${VERSION}.arm.latest" ${APP_VERSION} -f ${APP_VERSION}/Dockerfile.arm
  only:
    - master

build:gitlab-arm64-latest:
  <<: *docker_gitlab
  stage: build
  script:
    - export VERSION=$(grep ' VERSION' ${APP_VERSION}/Dockerfile.arm64|awk -F" " '{ print $3 }')
    - echo ${VERSION}
    - docker build -t "$CI_REGISTRY_IMAGE:${VERSION}.arm64.latest" ${APP_VERSION} -f ${APP_VERSION}/Dockerfile.arm64
  only:
    - master

build:hub-arm-latest:
  <<: *docker_hub
  stage: build
  script:
    - export VERSION=$(grep ' VERSION' ${APP_VERSION}/Dockerfile.arm|awk -F" " '{ print $3 }')
    - echo ${VERSION}
    - docker build -t "zeiot/$CI_PROJECT_NAME:${VERSION}.arm.latest" ${APP_VERSION} -f ${APP_VERSION}/Dockerfile.arm
  only:
    - master

build:hub-arm64-latest:
  <<: *docker_hub
  stage: build
  script:
    - export VERSION=$(grep ' VERSION' ${APP_VERSION}/Dockerfile.arm64|awk -F" " '{ print $3 }')
    - echo ${VERSION}
    - docker build -t "zeiot/$CI_PROJECT_NAME:${VERSION}.arm64.latest" ${APP_VERSION} -f ${APP_VERSION}/Dockerfile.arm64
  only:
    - master

# ------------------------------- DEPLOY LATEST -----------------------------------

deploy:gitlab-arm-latest:
  <<: *docker_gitlab
  stage: deploy
  script:
    - export VERSION=$(grep ' VERSION' ${APP_VERSION}/Dockerfile.arm|awk -F" " '{ print $3 }')
    - echo ${VERSION}
    - docker push "$CI_REGISTRY_IMAGE:${VERSION}.arm.latest"
  only:
    - master

deploy:gitlab-arm64-latest:
  <<: *docker_gitlab
  stage: deploy
  script:
    - export VERSION=$(grep ' VERSION' ${APP_VERSION}/Dockerfile.arm64|awk -F" " '{ print $3 }')
    - echo ${VERSION}
    - docker push "$CI_REGISTRY_IMAGE:${VERSION}.arm64.latest"
  only:
    - master

deploy:hub-arm-latest:
  <<: *docker_gitlab
  stage: deploy
  script:
    - export VERSION=$(grep ' VERSION' ${APP_VERSION}/Dockerfile.arm|awk -F" " '{ print $3 }')
    - echo ${VERSION}
    - docker push "zeiot/$CI_PROJECT_NAME:v${VERSION}.arm.latest"
  only:
    - master

deploy:hub-arm64-latest:
  <<: *docker_gitlab
  stage: deploy
  script:
    - export VERSION=$(grep ' VERSION' ${APP_VERSION}/Dockerfile.arm64|awk -F" " '{ print $3 }')
    - echo ${VERSION}
    - docker push "zeiot/$CI_PROJECT_NAME:v${VERSION}.arm64.latest"
  only:
    - master

# -------------------------------- BUILD TAGS ------------------------------------

build:gitlab-arm:
  <<: *docker_gitlab
  stage: deploy
  script:
    - export VERSION=$(grep ' VERSION' ${APP_VERSION}/Dockerfile.arm|awk -F" " '{ print $3 }')
    - echo ${VERSION}
    - docker build -t "$CI_REGISTRY_IMAGE:v${VERSION}.arm" ${APP_VERSION} -f ${APP_VERSION}/Dockerfile.arm
  only:
    - tags

build:gitlab-arm64:
  <<: *docker_gitlab
  stage: deploy
  script:
    - export VERSION=$(grep ' VERSION' ${APP_VERSION}/Dockerfile.arm64|awk -F" " '{ print $3 }')
    - echo ${VERSION}
    - docker build -t "$CI_REGISTRY_IMAGE:v${VERSION}.arm64" ${APP_VERSION} -f ${APP_VERSION}/Dockerfile.arm64
  only:
    - tags

build:hub-arm:
  <<: *docker_hub
  stage: build
  script:
    - export VERSION=$(grep ' VERSION' ${APP_VERSION}/Dockerfile.arm|awk -F" " '{ print $3 }')
    - echo ${VERSION}
    - docker build -t "zeiot/$CI_PROJECT_NAME:v${VERSION}.arm" ${APP_VERSION} -f ${APP_VERSION}/Dockerfile.arm
  only:
    - tags

build:hub-arm64:
  <<: *docker_hub
  stage: build
  script:
    - export VERSION=$(grep ' VERSION' ${APP_VERSION}/Dockerfile.arm64|awk -F" " '{ print $3 }')
    - echo ${VERSION}
    - docker build -t "zeiot/$CI_PROJECT_NAME:v${VERSION}.arm64" ${APP_VERSION} -f ${APP_VERSION}/Dockerfile.arm64
  only:
    - tags

# ----------------------------- DEPLOY TAGS ------------------------------------

deploy:gitlab-arm:
  <<: *docker_gitlab
  stage: deploy
  script:
    - export VERSION=$(grep ' VERSION' ${APP_VERSION}/Dockerfile.arm|awk -F" " '{ print $3 }')
    - echo ${VERSION}
    - docker push "$CI_REGISTRY_IMAGE:v${VERSION}.arm"
  only:
    - tags

deploy:gitlab-arm64:
  <<: *docker_gitlab
  stage: deploy
  script:
    - export VERSION=$(grep ' VERSION' ${APP_VERSION}/Dockerfile.arm64|awk -F" " '{ print $3 }')
    - echo ${VERSION}
    - docker push "$CI_REGISTRY_IMAGE:${VERSION}.arm64"
  only:
    - tags

deploy:hub-arm:
  <<: *docker_gitlab
  stage: deploy
  script:
    - export VERSION=$(grep ' VERSION' ${APP_VERSION}/Dockerfile.arm|awk -F" " '{ print $3 }')
    - echo ${VERSION}
    - docker push "zeiot/$CI_PROJECT_NAME:v${VERSION}.arm"
  only:
    - tags

deploy:hub-arm64:
  <<: *docker_gitlab
  stage: deploy
  script:
    - export VERSION=$(grep ' VERSION' ${APP_VERSION}/Dockerfile.arm64|awk -F" " '{ print $3 }')
    - echo ${VERSION}
    - docker push "zeiot/$CI_PROJECT_NAME:v${VERSION}.arm64"
  only:
    - tags